//*****************************************************************************
//
//      This code was generated by the JADE Exposure Wizard.
//
//      JADE Version    : 20.0.01
//      Generation date : Tuesday, 19 January 2021
//      Generated by    : cnwta3
//      JADE Schema     : JoobSpatialDemoSchema
//      Exposure Name   : SpatialDemoExposure
//
//      NOTE: You should NOT change this file as it may cause incorrect
//            behaviour. Any changes that you do make will be lost if
//            this code is regenerated.
//
//*****************************************************************************

namespace SpatialDemoExposure
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using JadeSoftware.Joob;
	using JadeSoftware.Joob.Client;
	using JadeSoftware.Joob.Metadata;
	using JadeSoftware.Joob.Management;
	using JadeSoftware.Joob.MetaSchema;
	using JadeSoftware.Jade.DotNetInterop;

	[System.Runtime.Serialization.KnownTypeAttribute(typeof(CityByGeomRTree))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(CountyByGeomRTree))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(CountyByNameDict))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(PersonByGeomRTree))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(StateByAbbrDict))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(StateByGeomRTree))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(GeometriesRTree))]
	[System.Runtime.Serialization.KnownTypeAttribute(typeof(SpatialLayerByNameDict))]
	[System.Runtime.Serialization.DataContractAttribute(IsReference=true)]
	[System.ComponentModel.DataAnnotations.MetadataTypeAttribute(typeof(RootMetadata))]
	[JadeSoftware.Joob.Client.JoobClassAttribute("Root", "RootSchema.JoobSpatialDemoSchema", ClassNamespace="SpatialDemoExposure")]
	[JadeSoftware.Joob.Metadata.JomlTypeAttribute(JadeSoftware.Joob.Metadata.JomlTypeKind.Class, "Root", typeof(JoobObject))]
	public partial class Root : JoobObject
	{
		private static RootMetadata _metaModel;
		partial void _initialize();
		static Root()
		{
			_metaModel = MetadataCache<RootMetadata>.GetData(null);
		}
		public Root() :
			this(JadeSoftware.Joob.ClassPersistence.Persistent)
		{
		}
		public Root(JadeSoftware.Joob.ClassPersistence lifetime) :
			base(lifetime, typeof(Root), _metaModel.metaClass)
		{
			this._initialize();
		}
		protected Root(JadeSoftware.Joob.ClassPersistence lifetime, System.Type type, JadeSoftware.Joob.ClassMetadata metaClass, params System.Object[] parameters) :
			base(lifetime, type, metaClass, parameters)
		{
			this._initialize();
		}
	
#region Jade Properties

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allCitiesByGeom", typeof(CityByGeomRTree), DatabaseTypeName="CityByGeomRTree")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public CityByGeomRTree AllCitiesByGeom
		{
			get
			{
				return this.GetPropertyReference<CityByGeomRTree>(_metaModel.metaClass, _metaModel.allCitiesByGeom);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allCountiesByGeom", typeof(CountyByGeomRTree), DatabaseTypeName="CountyByGeomRTree")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public CountyByGeomRTree AllCountiesByGeom
		{
			get
			{
				return this.GetPropertyReference<CountyByGeomRTree>(_metaModel.metaClass, _metaModel.allCountiesByGeom);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allCountiesByName", typeof(CountyByNameDict), DatabaseTypeName="CountyByNameDict")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public CountyByNameDict AllCountiesByName
		{
			get
			{
				return this.GetPropertyReference<CountyByNameDict>(_metaModel.metaClass, _metaModel.allCountiesByName);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allPeopleByGeom", typeof(PersonByGeomRTree), DatabaseTypeName="PersonByGeomRTree")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public PersonByGeomRTree AllPeopleByGeom
		{
			get
			{
				return this.GetPropertyReference<PersonByGeomRTree>(_metaModel.metaClass, _metaModel.allPeopleByGeom);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allStatesByAbbr", typeof(StateByAbbrDict), DatabaseTypeName="StateByAbbrDict")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public StateByAbbrDict AllStatesByAbbr
		{
			get
			{
				return this.GetPropertyReference<StateByAbbrDict>(_metaModel.metaClass, _metaModel.allStatesByAbbr);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("allStatesByGeom", typeof(StateByGeomRTree), DatabaseTypeName="StateByGeomRTree")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public StateByGeomRTree AllStatesByGeom
		{
			get
			{
				return this.GetPropertyReference<StateByGeomRTree>(_metaModel.metaClass, _metaModel.allStatesByGeom);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("externalRTree", typeof(GeometriesRTree), DatabaseTypeName="GeometriesRTree")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public GeometriesRTree ExternalRTree
		{
			get
			{
				return this.GetPropertyReference<GeometriesRTree>(_metaModel.metaClass, _metaModel.externalRTree);
			}
			private set { }
		}

		[JadeSoftware.Joob.Client.JoobPropertyAttribute("otherSpatialLayers", typeof(SpatialLayerByNameDict), DatabaseTypeName="SpatialLayerByNameDict")]
		[System.Runtime.Serialization.DataMemberAttribute()]
		public SpatialLayerByNameDict OtherSpatialLayers
		{
			get
			{
				return this.GetPropertyReference<SpatialLayerByNameDict>(_metaModel.metaClass, _metaModel.otherSpatialLayers);
			}
			private set { }
		}
	#endregion
	}

	public partial class RootMetadata : JadeSoftware.Joob.IDomainMetadata
	{

		internal JadeSoftware.Joob.ClassMetadata metaClass;
		internal JadeSoftware.Joob.PropertyMetadata allCitiesByGeom;
		internal JadeSoftware.Joob.PropertyMetadata allCountiesByGeom;
		internal JadeSoftware.Joob.PropertyMetadata allCountiesByName;
		internal JadeSoftware.Joob.PropertyMetadata allPeopleByGeom;
		internal JadeSoftware.Joob.PropertyMetadata allStatesByAbbr;
		internal JadeSoftware.Joob.PropertyMetadata allStatesByGeom;
		internal JadeSoftware.Joob.PropertyMetadata externalRTree;
		internal JadeSoftware.Joob.PropertyMetadata otherSpatialLayers;

		private RootMetadata()
		{
		}
		partial void InitializeDynamicProperties(JadeSoftware.Joob.Client.IJoobConnection connection);

		public RootMetadata(JadeSoftware.Joob.Client.JoobConnection connection)
		{
			metaClass = new JadeSoftware.Joob.ClassMetadata(connection, typeof(Root), "Root", "RootSchema.JoobSpatialDemoSchema");
			this.InitializeProperties(connection);
			this.InitializeDynamicProperties(connection);
		}

		private void InitializeProperties(JadeSoftware.Joob.Client.IJoobConnection connection)
		{
			allCitiesByGeom = metaClass.CheckProperty("allCitiesByGeom", typeof(CityByGeomRTree));
			allCountiesByGeom = metaClass.CheckProperty("allCountiesByGeom", typeof(CountyByGeomRTree));
			allCountiesByName = metaClass.CheckProperty("allCountiesByName", typeof(CountyByNameDict));
			allPeopleByGeom = metaClass.CheckProperty("allPeopleByGeom", typeof(PersonByGeomRTree));
			allStatesByAbbr = metaClass.CheckProperty("allStatesByAbbr", typeof(StateByAbbrDict));
			allStatesByGeom = metaClass.CheckProperty("allStatesByGeom", typeof(StateByGeomRTree));
			externalRTree = metaClass.CheckProperty("externalRTree", typeof(GeometriesRTree));
			otherSpatialLayers = metaClass.CheckProperty("otherSpatialLayers", typeof(SpatialLayerByNameDict));
		}
	}
}
